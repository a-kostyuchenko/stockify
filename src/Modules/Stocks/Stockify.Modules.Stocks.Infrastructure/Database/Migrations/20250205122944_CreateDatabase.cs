// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Stockify.Modules.Stocks.Infrastructure.Database.Migrations
{
    /// <inheritdoc />
    public partial class CreateDatabase : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "stocks");

            migrationBuilder.CreateTable(
                name: "inbox_message_consumers",
                schema: "stocks",
                columns: table => new
                {
                    inbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_inbox_message_consumers", x => new { x.inbox_message_id, x.name });
                });

            migrationBuilder.CreateTable(
                name: "inbox_messages",
                schema: "stocks",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    type = table.Column<string>(type: "text", nullable: false),
                    content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                    occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    error = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_inbox_messages", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "outbox_message_consumers",
                schema: "stocks",
                columns: table => new
                {
                    outbox_message_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_outbox_message_consumers", x => new { x.outbox_message_id, x.name });
                });

            migrationBuilder.CreateTable(
                name: "outbox_messages",
                schema: "stocks",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    type = table.Column<string>(type: "text", nullable: false),
                    content = table.Column<string>(type: "jsonb", maxLength: 2000, nullable: false),
                    occurred_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    processed_on_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    error = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_outbox_messages", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "stockholders",
                schema: "stocks",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    first_name = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false),
                    last_name = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false),
                    email = table.Column<string>(type: "character varying(300)", maxLength: 300, nullable: false),
                    attitude_type = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true),
                    risk_coefficient = table.Column<decimal>(type: "numeric(18,4)", precision: 18, scale: 4, nullable: false),
                    risk_profile_updated_at_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_stockholders", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "ticker_types",
                schema: "stocks",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    code = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    description = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_ticker_types", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "tickers",
                schema: "stocks",
                columns: table => new
                {
                    symbol = table.Column<string>(type: "character varying(20)", maxLength: 20, nullable: false),
                    name = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false),
                    description = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false),
                    cik = table.Column<string>(type: "character varying(10)", maxLength: 10, nullable: false),
                    active = table.Column<bool>(type: "boolean", nullable: false),
                    ticker_type_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_tickers", x => x.symbol);
                    table.ForeignKey(
                        name: "fk_tickers_ticker_types_ticker_type_id",
                        column: x => x.ticker_type_id,
                        principalSchema: "stocks",
                        principalTable: "ticker_types",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ticker_subscriptions",
                schema: "stocks",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    symbol = table.Column<string>(type: "character varying(20)", nullable: false),
                    stockholder_id = table.Column<Guid>(type: "uuid", nullable: false),
                    created_at_utc = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    active = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_ticker_subscriptions", x => x.id);
                    table.ForeignKey(
                        name: "fk_ticker_subscriptions_stockholders_stockholder_id",
                        column: x => x.stockholder_id,
                        principalSchema: "stocks",
                        principalTable: "stockholders",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_ticker_subscriptions_tickers_symbol",
                        column: x => x.symbol,
                        principalSchema: "stocks",
                        principalTable: "tickers",
                        principalColumn: "symbol",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "ix_inbox_messages_occurred_on_utc_processed_on_utc",
                schema: "stocks",
                table: "inbox_messages",
                columns: new[] { "occurred_on_utc", "processed_on_utc" },
                filter: "processed_on_utc IS NULL")
                .Annotation("Npgsql:IndexInclude", new[] { "id", "type", "content" });

            migrationBuilder.CreateIndex(
                name: "ix_outbox_messages_occurred_on_utc_processed_on_utc",
                schema: "stocks",
                table: "outbox_messages",
                columns: new[] { "occurred_on_utc", "processed_on_utc" },
                filter: "processed_on_utc IS NULL")
                .Annotation("Npgsql:IndexInclude", new[] { "id", "type", "content" });

            migrationBuilder.CreateIndex(
                name: "ix_stockholders_email",
                schema: "stocks",
                table: "stockholders",
                column: "email",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_ticker_subscriptions_stockholder_id",
                schema: "stocks",
                table: "ticker_subscriptions",
                column: "stockholder_id");

            migrationBuilder.CreateIndex(
                name: "ix_ticker_subscriptions_symbol_stockholder_id",
                schema: "stocks",
                table: "ticker_subscriptions",
                columns: new[] { "symbol", "stockholder_id" },
                unique: true,
                filter: "active = true");

            migrationBuilder.CreateIndex(
                name: "ix_ticker_types_code",
                schema: "stocks",
                table: "ticker_types",
                column: "code",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_tickers_cik",
                schema: "stocks",
                table: "tickers",
                column: "cik",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_tickers_name_description",
                schema: "stocks",
                table: "tickers",
                columns: new[] { "name", "description" })
                .Annotation("Npgsql:IndexMethod", "GIN")
                .Annotation("Npgsql:TsVectorConfig", "english");

            migrationBuilder.CreateIndex(
                name: "ix_tickers_ticker_type_id",
                schema: "stocks",
                table: "tickers",
                column: "ticker_type_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "inbox_message_consumers",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "inbox_messages",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "outbox_message_consumers",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "outbox_messages",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "ticker_subscriptions",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "stockholders",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "tickers",
                schema: "stocks");

            migrationBuilder.DropTable(
                name: "ticker_types",
                schema: "stocks");
        }
    }
}
